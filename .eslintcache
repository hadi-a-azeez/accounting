[{"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\payment.js":"1","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\cashReciept.js":"2","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\index.js":"3","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\home.js":"4","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\entry.js":"5","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\topBar.js":"6","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\sideBar.js":"7","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\customers.js":"8","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\payment.js":"9","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\purchase.js":"10","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\reports.js":"11","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customersList.js":"12","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\sale.js":"13","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customerHistory.js":"14","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\updateCustomer.js":"15","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\config.js":"16","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\purchase.js":"17","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\exchange.js":"18","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\sale.js":"19","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\cashReciept.js":"20","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\App.js":"21","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\report.js":"22"},{"size":5495,"mtime":1616858224493,"results":"23","hashOfConfig":"24"},{"size":9033,"mtime":1616911685760,"results":"25","hashOfConfig":"24"},{"size":293,"mtime":1611570163982,"results":"26","hashOfConfig":"24"},{"size":331,"mtime":1611661035468,"results":"27","hashOfConfig":"24"},{"size":1882,"mtime":1614284355991,"results":"28","hashOfConfig":"24"},{"size":303,"mtime":1614278392686,"results":"29","hashOfConfig":"24"},{"size":1867,"mtime":1611660544354,"results":"30","hashOfConfig":"24"},{"size":1100,"mtime":1614271544601,"results":"31","hashOfConfig":"24"},{"size":580,"mtime":1612724707414,"results":"32","hashOfConfig":"24"},{"size":6529,"mtime":1616840216695,"results":"33","hashOfConfig":"24"},{"size":10904,"mtime":1616913884509,"results":"34","hashOfConfig":"24"},{"size":8068,"mtime":1614275379673,"results":"35","hashOfConfig":"24"},{"size":6094,"mtime":1616912816857,"results":"36","hashOfConfig":"24"},{"size":14472,"mtime":1616857287435,"results":"37","hashOfConfig":"24"},{"size":1742,"mtime":1611654676852,"results":"38","hashOfConfig":"24"},{"size":108,"mtime":1616909428612,"results":"39","hashOfConfig":"24"},{"size":600,"mtime":1612724732711,"results":"40","hashOfConfig":"24"},{"size":590,"mtime":1612724678186,"results":"41","hashOfConfig":"24"},{"size":744,"mtime":1614168159965,"results":"42","hashOfConfig":"24"},{"size":627,"mtime":1612725306156,"results":"43","hashOfConfig":"24"},{"size":758,"mtime":1612121426864,"results":"44","hashOfConfig":"24"},{"size":412,"mtime":1616909733807,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18mqnqx",{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\payment.js",["98","99"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\cashReciept.js",["100","101","102","103"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\index.js",[],["104","105"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\home.js",[],["106","107"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\entry.js",["108","109","110","111","112"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\topBar.js",[],["113","114"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\sideBar.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\customers.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\payment.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\purchase.js",["115","116"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\reports.js",["117","118"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customersList.js",["119","120"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./css/customers.module.css\";\r\nimport SideBar from \"../../components/sideBar\";\r\nimport TopBar from \"../../components/topBar\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  IconButton,\r\n  Link,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon } from \"@chakra-ui/icons\";\r\nimport { addCustomerAPI, getCustomerAPI } from \"../../api/customers\";\r\n\r\nconst Customers = () => {\r\n  const [customersData, setCustomersData] = useState([]);\r\n  const [customerDetails, setCustomerDetails] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isBtnLoading, setIsBtnLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getCustomers = async () => {\r\n      setIsLoading(true);\r\n      const response = await getCustomerAPI();\r\n      console.log(response.data);\r\n      setCustomersData(response.data);\r\n      setIsLoading(false);\r\n    };\r\n    getCustomers();\r\n  }, []);\r\n\r\n  const addCustomer = async () => {\r\n    setIsBtnLoading(true);\r\n    const response = await addCustomerAPI(customerDetails);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      setIsBtnLoading(false);\r\n    }\r\n  };\r\n\r\n  const CustomerCard = ({ customer }) => {\r\n    return (\r\n      <Tr>\r\n        <Td>\r\n          <Link\r\n            onClick={() => history.push(`/customer_history/${customer.id}`)}\r\n          >\r\n            {customer.customer_name}\r\n          </Link>\r\n        </Td>\r\n        <Td>{customer.customer_phone}</Td>\r\n        <Td>{customer.customer_charge}</Td>\r\n        <Td>\r\n          <IconButton\r\n            borderRadius=\"30px\"\r\n            icon={<EditIcon />}\r\n            onClick={() => setIsUpdateOpen(true)}\r\n          />\r\n        </Td>\r\n      </Tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <SideBar />\r\n      <TopBar label=\"Customers\" />\r\n      <Button\r\n        size=\"lg\"\r\n        colorScheme=\"blue\"\r\n        onClick={() => setIsOpen(true)}\r\n        mt=\"70px\"\r\n        alignSelf=\"flex-start\"\r\n        ml=\"140px\"\r\n      >\r\n        Add New Customer\r\n      </Button>\r\n      {/* Add new customer modal starts here */}\r\n      <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Add New Customer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form>\r\n            <ModalBody>\r\n              <FormControl>\r\n                <FormLabel>Customer Name</FormLabel>\r\n                <Input\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"customer name\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_name: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Phone Number</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"customer_phone\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_phone: parseInt(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"phone no\"\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Charge</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"customer_charge\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_charge: parseFloat(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"charge\"\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Opening balance</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"opening_balance\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      opening_balance: parseFloat(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"charge\"\r\n                />\r\n              </FormControl>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                isLoading={isBtnLoading}\r\n                loadingText=\"Adding customer\"\r\n                onClick={addCustomer}\r\n              >\r\n                Add Customer\r\n              </Button>\r\n            </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n      </Modal>\r\n      {/* Add new customer modal ends here */}\r\n\r\n      {/* Update customer modal starts here */}\r\n      <Modal isOpen={isUpdateOpen} onClose={() => setIsUpdateOpen(false)}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Update Customer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl>\r\n              <FormLabel>Customer Name</FormLabel>\r\n              <Input\r\n                name=\"customer_name\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"customer name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Phone Number</FormLabel>\r\n              <Input\r\n                name=\"customer_phone\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"phone no\"\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Charge</FormLabel>\r\n              <Input\r\n                name=\"customer_charge\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"charge\"\r\n              />\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button variant=\"ghost\" colorScheme=\"red\" mr=\"2\">\r\n              Delete Customer\r\n            </Button>\r\n            <Button colorScheme=\"blue\">Update Customer</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      {/* Update customer modal ends here */}\r\n      {isLoading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"blue.500\"\r\n          size=\"xl\"\r\n          mt=\"10\"\r\n        />\r\n      )}\r\n      {/* customer details table starts here */}\r\n      {!isLoading && (\r\n        <Box w=\"80%\" mt=\"3\" borderRadius=\"3px\" background=\"white\">\r\n          <Table variant=\"simple\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Phone Number</Th>\r\n                <Th>Charge</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {customersData &&\r\n                customersData.map((customer, i) => (\r\n                  <CustomerCard customer={customer} key={i} />\r\n                ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      )}\r\n      {/* customer details table ends here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\sale.js",["121","122"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customerHistory.js",["123","124"],"import { useState, useEffect } from \"react\";\r\nimport TopBar from \"../../components/topBar\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport styles from \"./css/customerHistory.module.css\";\r\nimport SideBar from \"../../components/sideBar\";\r\nimport UpdateCustomer from \"../../components/updateCustomer\";\r\nimport { getCustomerByIdAPI } from \"../../api/customers\";\r\nimport { getPurchaseHistoryAPI } from \"../../api/purchase\";\r\nimport { getSaleHistoryAPI, getFromSaleHistoryAPI } from \"../../api/sale\";\r\nimport { getCashReceiptHistoryAPI } from \"../../api/cashReciept\";\r\nimport { getPaymentHistoryAPI } from \"../../api/payment\";\r\nimport { getExchangeHistoryAPI } from \"../../api/exchange\";\r\nimport { getUserReportAPI } from \"../../api/report\";\r\n\r\nconst CustomerHistory = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [customerDetails, setCustomerDetails] = useState({});\r\n  const [purchaseHistory, setPurchaseHistory] = useState([]);\r\n  const [saleHistory, setSaleHistory] = useState([]);\r\n  const [fromSaleHistory, setFromSaleHistory] = useState([]);\r\n  const [cashReceiptHistory, setCashReceiptHistory] = useState([]);\r\n  const [paymentHistory, setPaymentHistory] = useState([]);\r\n  const [exchangeHistory, setExchaneHistory] = useState([]);\r\n  // const [total, setTotal] = useState({\r\n  //   sale: 0,\r\n  //   from_sale: 0,\r\n  //   purchase: 0,\r\n  //   cash_receipt: 0,\r\n  //   exchange: 0,\r\n  //   payment: 0,\r\n  //   exchange: 0,\r\n  // });\r\n  const [customerTotal, setCustomerTotal] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const getData = async () => {\r\n      const userData = await getCustomerByIdAPI(id);\r\n      const purchaseData = await getPurchaseHistoryAPI(id);\r\n      const saleData = await getSaleHistoryAPI(id);\r\n      const fromSaleData = await getFromSaleHistoryAPI(id);\r\n      const cashReceiptData = await getCashReceiptHistoryAPI(id);\r\n      const paymentData = await getPaymentHistoryAPI(id);\r\n      const exchangeData = await getExchangeHistoryAPI(id);\r\n      const customerReport = await getUserReportAPI(id);\r\n\r\n      setCustomerTotal(customerReport.data);\r\n      setCustomerDetails(userData.data);\r\n      setPurchaseHistory(purchaseData.data.purchases);\r\n      setSaleHistory(saleData.data.sales);\r\n      setFromSaleHistory(fromSaleData.data.sales);\r\n      setCashReceiptHistory(cashReceiptData.data.cash_receipts);\r\n      setPaymentHistory(paymentData.data.payments);\r\n      setExchaneHistory(exchangeData.data.exchanges);\r\n\r\n      // setTotal({\r\n      //   purchase: purchaseData.data.sum_of_purchases,\r\n      //   sale: saleData.data.sum_of_sales,\r\n      //   from_sale: fromSaleData.data.sum_of_sales,\r\n      //   cash_receipt: cashReceiptData.data.sum_of_cash_receipts,\r\n      //   payment: paymentData.data.sum_of_payments,\r\n      //   exchange: exchangeData.data.sum_of_exchanges,\r\n      // });\r\n      // console.log(fromSaleHistory);\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <SideBar />\r\n      <TopBar label=\"Customer History\" />\r\n      <Flex direction=\"row\" w=\"90%\" ml=\"140px\" mt=\"70px\" alignSelf=\"flex-start\">\r\n        {/* customer details card starts here */}\r\n        <Box\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          overflow=\"hidden\"\r\n          w=\"30%\"\r\n          h=\"auto\"\r\n          p={4}\r\n          bg=\"white\"\r\n        >\r\n          {customerDetails && (\r\n            <>\r\n              <Text fontWeight=\"600\">\r\n                Customer Name: {customerDetails.customer_name}\r\n              </Text>\r\n              <Text fontWeight=\"600\">\r\n                Phone Number: {customerDetails.customer_phone}\r\n              </Text>\r\n              <Text fontWeight=\"600\">\r\n                Charge: {customerDetails.customer_charge}\r\n              </Text>\r\n            </>\r\n          )}\r\n          <Stack direction=\"row\" mt=\"2\">\r\n            <Button colorScheme=\"blue\" size=\"sm\">\r\n              Update Customer\r\n            </Button>\r\n            {isModalVisible && <UpdateCustomer />}\r\n            <Button colorScheme=\"red\" size=\"sm\">\r\n              Delete Customer\r\n            </Button>\r\n          </Stack>\r\n        </Box>\r\n        {/* custmer details card ends here */}\r\n\r\n        {/* debit and credit */}\r\n        <Box\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          overflow=\"hidden\"\r\n          w=\"20%\"\r\n          h=\"auto\"\r\n          p={4}\r\n          bg=\"white\"\r\n          ml=\"3\"\r\n        >\r\n          {/* <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Purchase: {customerTotal.purchase}\r\n          </Text>\r\n          <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Sale: {customerTotal.sale}\r\n          </Text> */}\r\n          <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Payment: {customerTotal.payment}\r\n          </Text>\r\n          <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Cash Receipt: {customerTotal.cash_receipt}\r\n          </Text>\r\n          <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Exchange:\r\n          </Text>\r\n          <Text fontWeight=\"700\" fontSize=\"17px\">\r\n            Balance: {customerTotal.opening_balance}\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      {/*purchases starts here */}\r\n      {isLoading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"blue.500\"\r\n          size=\"xl\"\r\n          mt=\"10\"\r\n        />\r\n      )}\r\n      {purchaseHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            PURCHASE\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>Quantity</Th>\r\n                  <Th>Charge</Th>\r\n                  <Th>Commission</Th>\r\n                  <Th>Total To Give</Th>\r\n                  <Th>Total Got</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {purchaseHistory.map((purchase) => (\r\n                  <Tr key={purchase.id}>\r\n                    <Td>Purchase</Td>\r\n                    <Td>{purchase.date}</Td>\r\n                    <Td>{purchase.currency_quantity}</Td>\r\n                    <Td>{purchase.currency_charge}</Td>\r\n                    <Td>{purchase.commission}</Td>\r\n                    <Td>{purchase.currency_to_give}</Td>\r\n                    <Td>{purchase.currency_got}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Purchase:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* purchase table ends here */}\r\n      {/* payment table starts here */}\r\n      {paymentHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            PAYMENT\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>Currency type</Th>\r\n                  <Th>Amount</Th>\r\n                  <Th>Amount(AED)</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {paymentHistory.map((payment) => (\r\n                  <Tr key={payment.id}>\r\n                    <Td>Payment</Td>\r\n                    <Td>{payment.date}</Td>\r\n                    <Td>{payment.currency_type}</Td>\r\n                    <Td>{payment.currency_quantity}</Td>\r\n                    <Td>{payment.currency_quantity_aed}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Payment:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* payment table ends here */}\r\n      {/* Sale table starts here */}\r\n      {saleHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            SALE\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>From</Th>\r\n                  <Th>Currency type</Th>\r\n                  <Th>Amount</Th>\r\n                  <Th>Charge</Th>\r\n                  <Th>Total</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {saleHistory.map((sale) => (\r\n                  <Tr key={sale.id}>\r\n                    <Td>Sale</Td>\r\n                    <Td>{sale.date}</Td>\r\n                    <Td>{sale.from_customer_customer.customer_name}</Td>\r\n                    <Td>{sale.currency_type}</Td>\r\n                    <Td>{sale.currency_quantity}</Td>\r\n                    <Td>{sale.currency_charge}</Td>\r\n                    <Td>{sale.currency_total}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Sales:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* sale table ends here */}\r\n      {/* cash receipt table starts here */}\r\n      {cashReceiptHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            CASH RECEIPT\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>Currency type</Th>\r\n                  <Th>Amount(SR)</Th>\r\n                  <Th>Amount(AED)</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {cashReceiptHistory.map((cashReceipt) => (\r\n                  <Tr key={cashReceipt.id}>\r\n                    <Td>Cash Reciept</Td>\r\n                    <Td>{cashReceipt.date}</Td>\r\n                    <Td>{cashReceipt.currency_type}</Td>\r\n                    <Td>{cashReceipt.currency_quantity}</Td>\r\n                    <Td>{cashReceipt.currency_quantity_aed}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Cash Receipt:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* cash receipt table ends here */}\r\n      {/* exchange table starts here */}\r\n      {exchangeHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            EXCHANGE\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>Currency type</Th>\r\n                  <Th>Amount</Th>\r\n                  <Th>Charge</Th>\r\n                  <Th>Total</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {exchangeHistory.map((exchange) => (\r\n                  <Tr key={exchange.id}>\r\n                    <Td>Exchange</Td>\r\n                    <Td>{exchange.date}</Td>\r\n                    <Td>{exchange.currency_type}</Td>\r\n                    <Td>{exchange.currency_quantity}</Td>\r\n                    <Td>{exchange.currency_charge}</Td>\r\n                    <Td>{exchange.currency_total}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Exchange:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* exchange table ends here */}\r\n      {/* Sale to table starts here */}\r\n      {fromSaleHistory.length > 0 && (\r\n        <>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"4\">\r\n            SALE TO\r\n          </Text>\r\n          <Box\r\n            w=\"80%\"\r\n            mt=\"3\"\r\n            borderRadius=\"3px\"\r\n            background=\"white\"\r\n            borderWidth=\"1px\"\r\n          >\r\n            <Table variant=\"simple\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Mode</Th>\r\n                  <Th>Date</Th>\r\n                  <Th>Customer</Th>\r\n                  <Th>Currency type</Th>\r\n                  <Th>Amount</Th>\r\n                  <Th>Charge</Th>\r\n                  <Th>Total</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {fromSaleHistory.map((sale) => (\r\n                  <Tr key={sale.id}>\r\n                    <Td>Sale</Td>\r\n                    <Td>{sale.date}</Td>\r\n                    <Td>{sale.customer.customer_name}</Td>\r\n                    <Td>{sale.currency_type}</Td>\r\n                    <Td>{sale.currency_quantity}</Td>\r\n                    <Td>{sale.currency_charge}</Td>\r\n                    <Td>{sale.currency_total}</Td>\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Text fontWeight=\"600\" alignSelf=\"flex-start\" ml=\"140px\" mt=\"3\">\r\n            Total Sales:\r\n          </Text>\r\n        </>\r\n      )}\r\n      {/* Sale to table ends here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerHistory;\r\n","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\updateCustomer.js",[],["125","126"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\config.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\purchase.js",[],["127","128"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\exchange.js",[],["129","130"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\sale.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\cashReciept.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\App.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\report.js",[],{"ruleId":"131","severity":1,"message":"132","line":14,"column":3,"nodeType":"133","messageId":"134","endLine":14,"endColumn":22},{"ruleId":"131","severity":1,"message":"135","line":64,"column":11,"nodeType":"133","messageId":"134","endLine":64,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":15,"column":3,"nodeType":"133","messageId":"134","endLine":15,"endColumn":22},{"ruleId":"131","severity":1,"message":"135","line":89,"column":11,"nodeType":"133","messageId":"134","endLine":89,"endColumn":13},{"ruleId":"131","severity":1,"message":"136","line":99,"column":13,"nodeType":"133","messageId":"134","endLine":99,"endColumn":29},{"ruleId":"131","severity":1,"message":"137","line":104,"column":13,"nodeType":"133","messageId":"134","endLine":104,"endColumn":18},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"131","severity":1,"message":"144","line":11,"column":3,"nodeType":"133","messageId":"134","endLine":11,"endColumn":8},{"ruleId":"131","severity":1,"message":"145","line":13,"column":3,"nodeType":"133","messageId":"134","endLine":13,"endColumn":9},{"ruleId":"131","severity":1,"message":"146","line":22,"column":10,"nodeType":"133","messageId":"134","endLine":22,"endColumn":24},{"ruleId":"131","severity":1,"message":"147","line":22,"column":26,"nodeType":"133","messageId":"134","endLine":22,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":46,"column":11,"nodeType":"150","endLine":46,"endColumn":18},{"ruleId":"138","replacedBy":"151"},{"ruleId":"140","replacedBy":"152"},{"ruleId":"131","severity":1,"message":"153","line":30,"column":10,"nodeType":"133","messageId":"134","endLine":30,"endColumn":24},{"ruleId":"131","severity":1,"message":"154","line":30,"column":26,"nodeType":"133","messageId":"134","endLine":30,"endColumn":43},{"ruleId":"131","severity":1,"message":"155","line":22,"column":3,"nodeType":"133","messageId":"134","endLine":22,"endColumn":12},{"ruleId":"131","severity":1,"message":"156","line":32,"column":10,"nodeType":"133","messageId":"134","endLine":32,"endColumn":17},{"ruleId":"131","severity":1,"message":"157","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"158","line":22,"column":3,"nodeType":"133","messageId":"134","endLine":22,"endColumn":8},{"ruleId":"131","severity":1,"message":"132","line":14,"column":3,"nodeType":"133","messageId":"134","endLine":14,"endColumn":22},{"ruleId":"131","severity":1,"message":"135","line":60,"column":11,"nodeType":"133","messageId":"134","endLine":60,"endColumn":13},{"ruleId":"131","severity":1,"message":"147","line":29,"column":26,"nodeType":"133","messageId":"134","endLine":29,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":85,"column":6,"nodeType":"161","endLine":85,"endColumn":8,"suggestions":"162"},{"ruleId":"138","replacedBy":"163"},{"ruleId":"140","replacedBy":"164"},{"ruleId":"138","replacedBy":"165"},{"ruleId":"140","replacedBy":"166"},{"ruleId":"138","replacedBy":"167"},{"ruleId":"140","replacedBy":"168"},"no-unused-vars","'updateCustomerObAPI' is defined but never used.","Identifier","unusedVar","'ob' is assigned a value but never used.","'responseExchange' is assigned a value but never used.","'obTwo' is assigned a value but never used.","no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"'Input' is defined but never used.","'Button' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["169"],["170"],"'conversionRate' is assigned a value but never used.","'setConversionRate' is assigned a value but never used.","'useStyles' is defined but never used.","'sumOfOb' is assigned a value but never used.","'useForm' is defined but never used.","'Tfoot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["171"],["169"],["170"],["169"],["170"],["169"],["170"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Update the dependencies array to be: [id]",{"range":"174","text":"175"},[3188,3190],"[id]"]