[{"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\payment.js":"1","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\cashReciept.js":"2","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\index.js":"3","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\home.js":"4","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\entry.js":"5","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\topBar.js":"6","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\sideBar.js":"7","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\customers.js":"8","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\payment.js":"9","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\purchase.js":"10","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\reports.js":"11","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customersList.js":"12","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\sale.js":"13","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customerHistory.js":"14","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\updateCustomer.js":"15","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\config.js":"16","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\purchase.js":"17","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\exchange.js":"18","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\sale.js":"19","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\cashReciept.js":"20","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\App.js":"21"},{"size":5097,"mtime":1614023421987,"results":"22","hashOfConfig":"23"},{"size":8895,"mtime":1616849032998,"results":"24","hashOfConfig":"23"},{"size":293,"mtime":1611570163982,"results":"25","hashOfConfig":"23"},{"size":331,"mtime":1611661035468,"results":"26","hashOfConfig":"23"},{"size":1882,"mtime":1614284355991,"results":"27","hashOfConfig":"23"},{"size":303,"mtime":1614278392686,"results":"28","hashOfConfig":"23"},{"size":1867,"mtime":1611660544354,"results":"29","hashOfConfig":"23"},{"size":1100,"mtime":1614271544601,"results":"30","hashOfConfig":"23"},{"size":580,"mtime":1612724707414,"results":"31","hashOfConfig":"23"},{"size":6529,"mtime":1616840216695,"results":"32","hashOfConfig":"23"},{"size":10716,"mtime":1614284248523,"results":"33","hashOfConfig":"23"},{"size":8068,"mtime":1614275379673,"results":"34","hashOfConfig":"23"},{"size":6234,"mtime":1616841629794,"results":"35","hashOfConfig":"23"},{"size":14274,"mtime":1616849400305,"results":"36","hashOfConfig":"23"},{"size":1742,"mtime":1611654676852,"results":"37","hashOfConfig":"23"},{"size":108,"mtime":1613896623239,"results":"38","hashOfConfig":"23"},{"size":600,"mtime":1612724732711,"results":"39","hashOfConfig":"23"},{"size":590,"mtime":1612724678186,"results":"40","hashOfConfig":"23"},{"size":744,"mtime":1614168159965,"results":"41","hashOfConfig":"23"},{"size":627,"mtime":1612725306156,"results":"42","hashOfConfig":"23"},{"size":758,"mtime":1612121426864,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18mqnqx",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\payment.js",[],["92","93"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\cashReciept.js",["94","95"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\index.js",[],["96","97"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\home.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\entry.js",["98","99","100","101","102"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\topBar.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\sideBar.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\customers.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\payment.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\purchase.js",["103","104"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\reports.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customersList.js",["105","106"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"./css/customers.module.css\";\r\nimport SideBar from \"../../components/sideBar\";\r\nimport TopBar from \"../../components/topBar\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  IconButton,\r\n  Link,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon } from \"@chakra-ui/icons\";\r\nimport { addCustomerAPI, getCustomerAPI } from \"../../api/customers\";\r\n\r\nconst Customers = () => {\r\n  const [customersData, setCustomersData] = useState([]);\r\n  const [customerDetails, setCustomerDetails] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isBtnLoading, setIsBtnLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getCustomers = async () => {\r\n      setIsLoading(true);\r\n      const response = await getCustomerAPI();\r\n      console.log(response.data);\r\n      setCustomersData(response.data);\r\n      setIsLoading(false);\r\n    };\r\n    getCustomers();\r\n  }, []);\r\n\r\n  const addCustomer = async () => {\r\n    setIsBtnLoading(true);\r\n    const response = await addCustomerAPI(customerDetails);\r\n    console.log(response);\r\n    if (response.status === 200) {\r\n      setIsBtnLoading(false);\r\n    }\r\n  };\r\n\r\n  const CustomerCard = ({ customer }) => {\r\n    return (\r\n      <Tr>\r\n        <Td>\r\n          <Link\r\n            onClick={() => history.push(`/customer_history/${customer.id}`)}\r\n          >\r\n            {customer.customer_name}\r\n          </Link>\r\n        </Td>\r\n        <Td>{customer.customer_phone}</Td>\r\n        <Td>{customer.customer_charge}</Td>\r\n        <Td>\r\n          <IconButton\r\n            borderRadius=\"30px\"\r\n            icon={<EditIcon />}\r\n            onClick={() => setIsUpdateOpen(true)}\r\n          />\r\n        </Td>\r\n      </Tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <SideBar />\r\n      <TopBar label=\"Customers\" />\r\n      <Button\r\n        size=\"lg\"\r\n        colorScheme=\"blue\"\r\n        onClick={() => setIsOpen(true)}\r\n        mt=\"70px\"\r\n        alignSelf=\"flex-start\"\r\n        ml=\"140px\"\r\n      >\r\n        Add New Customer\r\n      </Button>\r\n      {/* Add new customer modal starts here */}\r\n      <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Add New Customer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form>\r\n            <ModalBody>\r\n              <FormControl>\r\n                <FormLabel>Customer Name</FormLabel>\r\n                <Input\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"customer name\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_name: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Phone Number</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"customer_phone\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_phone: parseInt(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"phone no\"\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Charge</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"customer_charge\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      customer_charge: parseFloat(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"charge\"\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel>Opening balance</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"opening_balance\"\r\n                  onChange={(e) =>\r\n                    setCustomerDetails({\r\n                      ...customerDetails,\r\n                      opening_balance: parseFloat(e.target.value),\r\n                    })\r\n                  }\r\n                  size=\"lg\"\r\n                  variant=\"filled\"\r\n                  w=\"100%\"\r\n                  placeholder=\"charge\"\r\n                />\r\n              </FormControl>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                isLoading={isBtnLoading}\r\n                loadingText=\"Adding customer\"\r\n                onClick={addCustomer}\r\n              >\r\n                Add Customer\r\n              </Button>\r\n            </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n      </Modal>\r\n      {/* Add new customer modal ends here */}\r\n\r\n      {/* Update customer modal starts here */}\r\n      <Modal isOpen={isUpdateOpen} onClose={() => setIsUpdateOpen(false)}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Update Customer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl>\r\n              <FormLabel>Customer Name</FormLabel>\r\n              <Input\r\n                name=\"customer_name\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"customer name\"\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Phone Number</FormLabel>\r\n              <Input\r\n                name=\"customer_phone\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"phone no\"\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Charge</FormLabel>\r\n              <Input\r\n                name=\"customer_charge\"\r\n                size=\"lg\"\r\n                variant=\"filled\"\r\n                w=\"100%\"\r\n                placeholder=\"charge\"\r\n              />\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button variant=\"ghost\" colorScheme=\"red\" mr=\"2\">\r\n              Delete Customer\r\n            </Button>\r\n            <Button colorScheme=\"blue\">Update Customer</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      {/* Update customer modal ends here */}\r\n      {isLoading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"blue.500\"\r\n          size=\"xl\"\r\n          mt=\"10\"\r\n        />\r\n      )}\r\n      {/* customer details table starts here */}\r\n      {!isLoading && (\r\n        <Box w=\"80%\" mt=\"3\" borderRadius=\"3px\" background=\"white\">\r\n          <Table variant=\"simple\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Phone Number</Th>\r\n                <Th>Charge</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {customersData &&\r\n                customersData.map((customer, i) => (\r\n                  <CustomerCard customer={customer} key={i} />\r\n                ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      )}\r\n      {/* customer details table ends here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\entry\\sale.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\pages\\customers\\customerHistory.js",["107","108","109"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\components\\updateCustomer.js",[],["110","111"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\config.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\purchase.js",[],["112","113"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\exchange.js",[],["114","115"],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\sale.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\api\\cashReciept.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\youraccounts\\accounting\\src\\App.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":90,"column":11,"nodeType":"122","messageId":"123","endLine":90,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":97,"column":13,"nodeType":"122","messageId":"123","endLine":97,"endColumn":29},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","severity":1,"message":"127","line":11,"column":3,"nodeType":"122","messageId":"123","endLine":11,"endColumn":8},{"ruleId":"120","severity":1,"message":"128","line":13,"column":3,"nodeType":"122","messageId":"123","endLine":13,"endColumn":9},{"ruleId":"120","severity":1,"message":"129","line":22,"column":10,"nodeType":"122","messageId":"123","endLine":22,"endColumn":24},{"ruleId":"120","severity":1,"message":"130","line":22,"column":26,"nodeType":"122","messageId":"123","endLine":22,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":46,"column":11,"nodeType":"133","endLine":46,"endColumn":18},{"ruleId":"120","severity":1,"message":"134","line":30,"column":10,"nodeType":"122","messageId":"123","endLine":30,"endColumn":24},{"ruleId":"120","severity":1,"message":"135","line":30,"column":26,"nodeType":"122","messageId":"123","endLine":30,"endColumn":43},{"ruleId":"120","severity":1,"message":"136","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"137","line":22,"column":3,"nodeType":"122","messageId":"123","endLine":22,"endColumn":8},{"ruleId":"120","severity":1,"message":"130","line":28,"column":26,"nodeType":"122","messageId":"123","endLine":28,"endColumn":43},{"ruleId":"138","severity":1,"message":"139","line":43,"column":5,"nodeType":"140","messageId":"141","endLine":43,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":81,"column":6,"nodeType":"144","endLine":81,"endColumn":8,"suggestions":"145"},{"ruleId":"116","replacedBy":"146"},{"ruleId":"118","replacedBy":"147"},{"ruleId":"116","replacedBy":"148"},{"ruleId":"118","replacedBy":"149"},{"ruleId":"116","replacedBy":"150"},{"ruleId":"118","replacedBy":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'updateOb' is assigned a value but never used.","Identifier","unusedVar","'responseExchange' is assigned a value but never used.",["152"],["153"],"'Input' is defined but never used.","'Button' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'conversionRate' is assigned a value but never used.","'setConversionRate' is assigned a value but never used.","'useForm' is defined but never used.","'Tfoot' is defined but never used.","no-dupe-keys","Duplicate key 'exchange'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromSaleHistory' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["154"],["152"],["153"],["152"],["153"],["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [fromSaleHistory, id]",{"range":"157","text":"158"},[2917,2919],"[fromSaleHistory, id]"]